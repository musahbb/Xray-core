// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: proxy/tuic/config.proto

package tuic

import (
	protocol "github.com/xtls/xray-core/common/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Account contains user-specific settings for TUIC protocol
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User UUID for authentication
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// User password for authentication
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_proxy_tuic_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_tuic_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_proxy_tuic_config_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Account) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of server endpoints
	Server []*protocol.ServerEndpoint `protobuf:"bytes,1,rep,name=server,proto3" json:"server,omitempty"`
	// Congestion control algorithm: "cubic", "new_reno", "bbr"
	CongestionControl string `protobuf:"bytes,2,opt,name=congestion_control,json=congestionControl,proto3" json:"congestion_control,omitempty"`
	// Whether to use UDP stream mode instead of datagram mode
	UdpStream bool `protobuf:"varint,3,opt,name=udp_stream,json=udpStream,proto3" json:"udp_stream,omitempty"`
	// Enable 0-RTT handshake
	ZeroRttHandshake bool `protobuf:"varint,4,opt,name=zero_rtt_handshake,json=zeroRttHandshake,proto3" json:"zero_rtt_handshake,omitempty"`
	// Heartbeat interval in seconds
	Heartbeat uint32 `protobuf:"varint,5,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
}

func (x *ClientConfig) Reset() {
	*x = ClientConfig{}
	mi := &file_proxy_tuic_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfig) ProtoMessage() {}

func (x *ClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_tuic_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfig.ProtoReflect.Descriptor instead.
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return file_proxy_tuic_config_proto_rawDescGZIP(), []int{1}
}

func (x *ClientConfig) GetServer() []*protocol.ServerEndpoint {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *ClientConfig) GetCongestionControl() string {
	if x != nil {
		return x.CongestionControl
	}
	return ""
}

func (x *ClientConfig) GetUdpStream() bool {
	if x != nil {
		return x.UdpStream
	}
	return false
}

func (x *ClientConfig) GetZeroRttHandshake() bool {
	if x != nil {
		return x.ZeroRttHandshake
	}
	return false
}

func (x *ClientConfig) GetHeartbeat() uint32 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

type ServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of users with their credentials
	Users []*protocol.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Congestion control algorithm: "cubic", "new_reno", "bbr"
	CongestionControl string `protobuf:"bytes,2,opt,name=congestion_control,json=congestionControl,proto3" json:"congestion_control,omitempty"`
	// Authentication timeout in seconds
	AuthTimeout uint32 `protobuf:"varint,3,opt,name=auth_timeout,json=authTimeout,proto3" json:"auth_timeout,omitempty"`
	// Enable 0-RTT handshake
	ZeroRttHandshake bool `protobuf:"varint,4,opt,name=zero_rtt_handshake,json=zeroRttHandshake,proto3" json:"zero_rtt_handshake,omitempty"`
	// Heartbeat interval in seconds
	Heartbeat uint32 `protobuf:"varint,5,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	// UDP timeout in seconds
	UdpTimeout uint32 `protobuf:"varint,6,opt,name=udp_timeout,json=udpTimeout,proto3" json:"udp_timeout,omitempty"`
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	mi := &file_proxy_tuic_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_tuic_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_proxy_tuic_config_proto_rawDescGZIP(), []int{2}
}

func (x *ServerConfig) GetUsers() []*protocol.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ServerConfig) GetCongestionControl() string {
	if x != nil {
		return x.CongestionControl
	}
	return ""
}

func (x *ServerConfig) GetAuthTimeout() uint32 {
	if x != nil {
		return x.AuthTimeout
	}
	return 0
}

func (x *ServerConfig) GetZeroRttHandshake() bool {
	if x != nil {
		return x.ZeroRttHandshake
	}
	return false
}

func (x *ServerConfig) GetHeartbeat() uint32 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

func (x *ServerConfig) GetUdpTimeout() uint32 {
	if x != nil {
		return x.UdpTimeout
	}
	return 0
}

var File_proxy_tuic_config_proto protoreflect.FileDescriptor

var file_proxy_tuic_config_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x74, 0x75, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x78, 0x72, 0x61, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x75, 0x69, 0x63, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x72, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x64, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x64, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x72, 0x74, 0x74, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x7a,
	0x65, 0x72, 0x6f, 0x52, 0x74, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0xff, 0x01,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x78, 0x72, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x72, 0x74, 0x74, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x7a, 0x65, 0x72, 0x6f, 0x52, 0x74, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x64, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x64, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42,
	0x4f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x72, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x74, 0x75, 0x69, 0x63, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x74, 0x6c, 0x73, 0x2f, 0x78, 0x72, 0x61, 0x79, 0x2d, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x74, 0x75, 0x69, 0x63, 0xaa, 0x02,
	0x0f, 0x58, 0x72, 0x61, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x75, 0x69, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proxy_tuic_config_proto_rawDescOnce sync.Once
	file_proxy_tuic_config_proto_rawDescData = file_proxy_tuic_config_proto_rawDesc
)

func file_proxy_tuic_config_proto_rawDescGZIP() []byte {
	file_proxy_tuic_config_proto_rawDescOnce.Do(func() {
		file_proxy_tuic_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_proxy_tuic_config_proto_rawDescData)
	})
	return file_proxy_tuic_config_proto_rawDescData
}

var file_proxy_tuic_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proxy_tuic_config_proto_goTypes = []any{
	(*Account)(nil),                 // 0: xray.proxy.tuic.Account
	(*ClientConfig)(nil),            // 1: xray.proxy.tuic.ClientConfig
	(*ServerConfig)(nil),            // 2: xray.proxy.tuic.ServerConfig
	(*protocol.ServerEndpoint)(nil), // 3: xray.common.protocol.ServerEndpoint
	(*protocol.User)(nil),           // 4: xray.common.protocol.User
}
var file_proxy_tuic_config_proto_depIdxs = []int32{
	3, // 0: xray.proxy.tuic.ClientConfig.server:type_name -> xray.common.protocol.ServerEndpoint
	4, // 1: xray.proxy.tuic.ServerConfig.users:type_name -> xray.common.protocol.User
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proxy_tuic_config_proto_init() }
func file_proxy_tuic_config_proto_init() {
	if File_proxy_tuic_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proxy_tuic_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proxy_tuic_config_proto_goTypes,
		DependencyIndexes: file_proxy_tuic_config_proto_depIdxs,
		MessageInfos:      file_proxy_tuic_config_proto_msgTypes,
	}.Build()
	File_proxy_tuic_config_proto = out.File
	file_proxy_tuic_config_proto_rawDesc = nil
	file_proxy_tuic_config_proto_goTypes = nil
	file_proxy_tuic_config_proto_depIdxs = nil
}
